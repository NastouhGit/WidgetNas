@page
@model WidgetNas.Pages.Components.TreeScriptModel
@{
    ViewData["Title"] = "درختواره جاوا اسکریپت";
    ViewData["Description"] = "ویجت نس یک فریم ورک فارسی با پشتیبانی کامل از راست به چپ و همچنین چپ به راست است.";
}
<h1>@ViewData["Title"]</h1>
<p>
    زمان آن رسیده با استفاده از توابع جاوا اسکریپت به پویایی درختواره کمک کنید.
    اگر میخواهید به درختواره گزینه اضافه کنید، در آن جستجو کنید، فیلتر کنید و کارهای دیگر،
    توابع جاوا اسکریپت به کمک شما می آید.
</p>
<h3>مثال مشترک</h3>
<div class="example-div" id="example-1">
    <div class="ltr" style="min-height:50vh">
        <input class="m-ie-20r" type="search" placeholder="Filter" onkeyup="WN('tree-test-1').wn.filterByText(this.value, true)">
        <ul class="tree" wn-type="tree" id="tree-test-1"
            onbeforeclick="AppendResult('Before Click <'+ t.selectedItem.text + '> to <'+ n.text +'>')"
            onafterclick="AppendResult('After Click <'+ t.selectedItem.text + '> to <'+ n.text +'>')"
            onselectionchanged="AppendResult('Selection Change <'+ t.selectedItem.text + '> Node: ' + n.text)"
            onbeforecollapsed="AppendResult('Before Collapse <'+ t.selectedItem.text + '> Node: ' + n.text)"
            onaftercollapsed="AppendResult('After Collapse <'+ t.selectedItem.text + '> Node: ' + n.text)"
            onbeforeexpand="AppendResult('Before Expand <'+ t.selectedItem.text + '> Node: ' + n.text)"
            onafterexpand="AppendResult('After Expand <'+ t.selectedItem.text + '> Node: ' + n.text)"
            onbeforetoggle="AppendResult('Before Toggle <'+ t.selectedItem.text + '> Node: ' + n.text)"
            onaftertoggle="AppendResult('After Toggle <'+ t.selectedItem.text + '> Node: ' + n.text)">
            <li>
                <item value="s1"><i class="fa-sharp fa-solid fa-circle-check"></i>Start with the tree!</item>
                <ul>
                    <li>
                        <item value="s2"><img src="~/images/tools16.png" />Set of items</item>
                        <ul>
                            <li><item value="s3"><i class="fa-solid fa-link"></i>Item 1</item></li>
                            <li><item value="s4"><i class="fa-solid fa-link"></i>Item 2</item></li>
                            <li><item value="s5"><i class="fa-solid fa-link"></i>Item 3</item></li>

                        </ul>
                    </li>
                    <li>
                        <item value="s6"><i class="fa-sharp fa-solid fa-circle-check"></i>Set of options</item>
                        <ul>
                            <li><item value="s7"><i class="fa-sharp fa-solid fa-circle-check"></i>An information option</item></li>
                            <li>
                                <item value="s8"><img src="~/images/tools32.png" />An option that has subsets</item>
                                <ul>
                                    <li><item value="s9"><i class="fa-solid fa-link"></i>Level 5</item></li>
                                    <li><item value="s10"><i class="fa-solid fa-link"></i>Level 6</item></li>
                                    <li>
                                        <item value="s11"><i class="fa-sharp fa-solid fa-circle-check"></i>This option has several other sub-options</item>
                                        <ul>
                                            <li><item value="s12"><i class="fa-solid fa-link"></i>Link 1</item></li>
                                            <li><item value="s13"><i class="fa-solid fa-link"></i>Link 2</item></li>
                                            <li><item value="s14"><i class="fa-solid fa-link"></i>Link 3</item></li>
                                            <li><item value="s15"><i class="fa-solid fa-link"></i>Link 4</item></li>
                                        </ul>
                                    </li>
                                    <li><item value="s16"><i class="fa-solid fa-link"></i>This link comes after a branch</item></li>
                                </ul>
                            </li>
                            <li><item value="s17"><i class="fa-sharp fa-solid fa-circle-check"></i>Item 3</item></li>
                            <li><item value="s18"><i class="fa-sharp fa-solid fa-circle-check"></i>Item 4</item></li>
                        </ul>
                    </li>
                    <li><item value="s19"><i class="fa-solid fa-link"></i>Other link</item></li>
                </ul>
            </li>
            <li><item value="s20" class="active"><a href="#"><i class="fa-solid fa-link"></i>Disabled Link 1</a></item></li>
            <li><item value="s21" disabled><i class="fa-sharp fa-solid fa-circle-check"></i>Disabled item 1</item></li>
            <li><item value="s22" class="disabled"><a href="#"><i class="fa-solid fa-link"></i>Disabled Link 2</a></item></li>
        </ul>

    </div>
    <div class="ltr">
        <div>
            <div class="button-group primary">
                <button onclick="WN('tree-test-1').wn.toggle(WN('tree-test-1').wn.selectedItem)">Toggle</button>
            </div>
            <div class="button-group primary">
                <button onclick="WN('tree-test-1').wn.collapse(WN('tree-test-1').wn.selectedItem)">Collapse</button>
                <button onclick="WN('tree-test-1').wn.collapseWithChild(WN('tree-test-1').wn.selectedItem)">Collapse With Child</button>
                <button onclick="WN('tree-test-1').wn.collapsedAll()">Collapsed all</button>
            </div>
            <div class="button-group primary">
                <button onclick="WN('tree-test-1').wn.expand(WN('tree-test-1').wn.selectedItem)">Expand</button>
                <button onclick="WN('tree-test-1').wn.expandToParent(WN('tree-test-1').wn.selectedItem)">Expand To Parent</button>
                <button onclick="WN('tree-test-1').wn.expandAll()">Expand all</button>
            </div>
            <div class="button-group primary">
                <button onclick="WN('tree-test-1').wn.select(WN('tree-test-1').wn.selectedItem)">Select</button>
                <button onclick="WN('tree-test-1').wn.findByText('This option has several other sub-options', false,true)" title="'This option has several other sub-options'">Find by text</button>
                <button onclick="WN('tree-test-1').wn.findByValue('s5',true)" title="'s5'">Find by value</button>
                <button onclick="WN('tree-test-1').wn.filterByText('link', true)">Filter 'link'</button>
                <button onclick="WN('tree-test-1').wn.filterByText('', true)">Clear Filter</button>
            </div>
        </div>
        <textarea id="result" class="w-100 h-50"></textarea>
        <script>
            let resObj = document.getElementById('result');
            let rowIndex = 1;
            function AppendResult(text) {
                resObj.value = (rowIndex++) + '- ' + text + '\r\n' + resObj.value;
            }
        </script>
    </div>
</div>
<figure><code data-on="example-1"></code></figure>

<h3>رخدادها</h3>
<p>پارامترهای t به معنی کلاس جاوایی tree است یا همان this</p>
<p>پارامترهای e به معنی رخداد جاوایی مرتبط با عمل است. مثلا در کلیک کردن پارامترهای مرتبط با MouseEvent</p>
<p>پارامترهای n به معنی انجام عملیات بر روی کدام node است.</p>
<p>
    <strong>beforeclick و afterclick</strong><br />
    قبل از اعمال تنظیمات مخصوص کلیک کردن، این رخداد فراخوانی میشود، شما میتوانید آنرا مستقیم مقدار دهی کرده یا در خصوصیت onbeforeclick درختواره خود تابعی به آن نسبت دهید. همچنین پس از پایان عمل کلیک رخداد afterclick اتفاق می افتد.
</p>
<figure>
    <pre><code class="html">
        &lt;<span class="ht">ul</span> <span class="ha">onbeforeclick=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>).wn.beforeClick = (t, node, e) => {};

        &lt;<span class="ht">ul</span> <span class="ha">onafterclick=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>).wn.afterClick = (t, node, e) => {};
    </code></pre>
</figure>
<p>
    <strong>selectionChanged</strong><br />
    اگر درختواره قابلیت انتخاب گزینه ای داشت، بعد از انتخاب آن گزینه این رخداد صدا زده میشود.
</p>
<figure>
    <pre><code class="html">
        &lt;<span class="ht">ul</span> <span class="ha">onselectionchanged=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].selectionChanged = (t,node) => { }
    </code></pre>
</figure>
<p>
    <strong>beforetoggle و aftertoggle</strong><br />
    زمانیکه یک نود، بین بسته شدن و یا باز شدن سوئیچ میکند، این رخدادها صدا زده میشود.
</p>
<figure>
    <pre><code class="html">
        &lt;<span class="ht">ul</span> <span class="ha">onbeforetoggle=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].beforeToggle = (t,node) => {}

        &lt;<span class="ht">ul</span> <span class="ha">onaftertoggle=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].afterToggle = (t,node) => {}
    </code></pre>
</figure>
<p>
    <strong>beforecollapse و aftercollapse</strong><br />
    زمانیکه تابع collapse توسط جاوا اسکریپت صدا زده میشود، این رخدادها فعال میشوند.
</p>
<figure>
    <pre><code class="html">
        &lt;<span class="ht">ul</span> <span class="ha">onbeforecollapse=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].beforecollapse = (t,node) => {}

        &lt;<span class="ht">ul</span> <span class="ha">onaftercollapse=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].aftercollapse = (t,node) => {}
    </code></pre>
</figure>
<p>
    <strong>beforeexpand و afterexpand</strong><br />
    زمانیکه تابع expand توسط جاوا اسکریپت صدا زده میشود، این رخدادها فعال میشوند.
</p>
<figure>
    <pre><code class="html">
        &lt;<span class="ht">ul</span> <span class="ha">onbeforeexpand=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].beforeexpand = (t,node) => {};

        &lt;<span class="ht">ul</span> <span class="ha">onafterexpand=</span><span class="hv">"..."</span> ...&gt;
        WN(<span class="ha">'tree-id'</span>].afterexpand = (t,node) => {};
    </code></pre>
</figure>
<h3>خصوصیات</h3>
<p>برای مدیریت و دسترسی به اطلاعات هر درختواره میتوانید از خصوصیات مرتبط با آن استفاده کنید.</p>
<p>
    <strong>dataSource</strong><br />
    زمانیکه شما به صورت دستی اجزای درختواره خود را تنظیم میکنید، سیستم به طور خودکار بر اساس گزینه های وارد شده، این خصوصیت را میسازد.
    شما میتوانید در حین استفاده از موضوع از این خصوصیت استفاده کنید.<br>
    این خصوصیت آرایه ای از جنس WNTreeNode است که این نوع خود دارای فیلدهای اطلاعاتی منحصر به خود را دارد. در زیر به شرح
    آن میپردازیم.
</p>
<p>
    <pre>
        type WNTreeNode = {
            id:number,
            text: string,
            html: string,
            link: string,
            value: string,
            image: string,
            liElement: HTMLLIElement,
            element: HTMLElement,
            parentNode: WNTreeNode,
            children: WNTreeNode[]
        }
    </pre>
    <strong>id</strong> این گزینه به طور خودکار بر اساس دیتای ورودی ساخته میشود.<br />
    <strong>text</strong> محتوی نمایش داده شده به صورت متن خالص است.<br />
    <strong>html</strong> محتوی به صورت html است که شامل باجت ها، تصاویر و ... باشد.<br />
    <strong>link</strong> در صورتیکه نوع آیتم درختواره از جنس لینک است، آدرس صفحه ای که باید باز شود در این گزینه قرار میگیرد. مقدار خالی یعنی محتوی از نوع لینک نیست.<br />
    <strong>value</strong> اگر هر گزینه دارای مقدار خاص باشد، مقدار آن در این خصوصیت قرار میگیرد. این مقدار به صورت خودکار
    از اتربیوت value مندرج در تگ item مقدار دهی شده یا توسط توابع دیگر مقداری دهی میگردد.<br />
    <strong>image</strong> اگر میخواهید در کنار هر گزینه تصویری باشد، یا آدرس آن تصویر را وارد کنید یا تگ مرتبط را در این فیلد بنویسید.<br />
    <strong>liElement</strong> هر گزینه زیر مجموعه یک li است، که این خصوصیت به آن اشاره میکند. این خصوصیت به صورت خودکار مقدار دهی میشود.<br />
    <strong>element</strong> هر محتوی نمایش داده شده در یک تگ item است، این خصوصیت به آن تگ اشاره دارد.<br />
    <strong>parentNode</strong> این ردیف اطلاعاتی ممکنه است زیر مجموعه یک ردیف اطلاعاتی دیگر باشد، به دلیل ساختار درختی این امر بدیهی است. این خصوصیت به ردیف اطلاعاتی واد اشاره دارد. این مقدار به صورت خودکار محاسبه میشود.<br />
    <strong>children</strong> این ردیف اطلاعاتی دارای یکسری فرزند است، فرزندان این ردیف را میتوانید در این خصوصیت به صورت آرایه از همین جنس معرفی کنید.
</p>
<p>در قسمت توابع به نحوه مقدار دهی از طریق دیتای وارد شده توسط سرور یا هر تابع دیگری اشاره خواهیم کرد.</p>
<p>
    <strong>selectedItem</strong><br />
    در صورت انتخاب هر گزینه در درختواره، گزینه انتخاب شده در این خصوصیت برگردانده میشود. این خصوصیت مقداری از خصوصیت WNTreeNode و گزینه ای در دل dataSource است.
    شما با استفاده از فیلدهای مرتبط با آن میتوانید به اطلاعات یا موضوعات مرتبط با آن دسترسی پیدا کنید.<br />
    در قسمت توابع، بسیار از این گزینه یا ردیف اطلاعاتی از جنس WNTreeNode استفاده میشود.
</p>

<h3>توابع</h3>
<p>اجرای برخی دستورات برای مدیریت بهتر درختواره توسط این توابع انجام میشود.</p>
<p>
    <strong>select</strong><br />
    اگر میخواهید گزینه ای را به صورت دستی انتخاب کنید، از این تابع استفاده کنید. ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.<br />
    ردیف اطلاعاتی مشخص شده در درختواره انتخاب میشود.<br>
    از این تابع زمانی استفاده میشود که مثلا شما دیتا را وارد کردید و از سمت سرور یک ردیف اطلاعاتی پیش فرض را باید انتخاب و نمایش دهید.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.select(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>
<p>
    <strong>toggle</strong><br />
    اگر گزینه ای دارای فرزند باشد و شما بخواهید مجموعه زیر آنرا اگر بسته است باز و اگر باز است ببندید،
    از این تابع استفاده کنید.
    ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.toggle(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>

<p>
    <strong>collapse</strong><br />
    اگر گزینه ای دارای فرزند باشد و شما بخواهید مجموعه زیر آنرا بسته از این تابع استفاده کنید.
    ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.collapse(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>
<p>
    <strong>collapseWithChild</strong><br />
    اگر گزینه ای دارای فرزند باشد و فرزندان آن نیز دارای فرزند باشند و شما بخواهید تمام مجموعه های زیر آنرا بسته از این تابع استفاده کنید.
    ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.collapseWithChild(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>
<p>
    <strong>collapsedAll</strong><br />
    اگر میخواهید همه گزینه ها بسته باشند از این تابع استفاده کنید.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.collapsedAll();
    </code></pre>
</figure>

<p>
    <strong>expand</strong><br />
    اگر گزینه ای دارای فرزند باشد و شما بخواهید مجموعه زیر آنرا نمایش دهید از این تابع استفاده کنید.
    ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.expand(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>
<p>
    <strong>expandToParent</strong><br />
    اگر گزینه ای در زیر مجموعه چندین شاخه است و شما بخواهید تمام مجموعه های بالا دستی آنرا باز کنید تا این گزینه نمایش داده شود از این تابع استفاده کنید.
    ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.expandToParent(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>
<p>
    <strong>expandChilds</strong><br />
    مانند تابع expandToParent عمل میکند فقط به جای باز کردن والدین، تمام زیر مجموعه خود را باز میکند.
    ورودی آن یک ردیف اطلاعاتی از جنس WNTreeNode است.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.expandChilds(WN(<span class="ha">'tree-id'</span>).wn.dataSoure[0]);
    </code></pre>
</figure>
<p>
    <strong>expandAll</strong><br />
    اگر میخواهید همه گزینه ها باز شوند از این تابع استفاده کنید.
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.expandAll();
    </code></pre>
</figure>

<p>
    <strong>findByText</strong><br />
    زمانیکه میخواهید یک یا چند ردیف اطلاعاتی را بر اساس محتوی نمایش داده شده پیدا کنید،
    از این تابع استفاده کنید، این تابع تمامی ردیف های اطلاعاتی که دارای چنین متنی باشد را انتخاب میکند.<br />
    پارامترها:<br />
    <strong>text</strong>: متن مورد جستجو<br />
    <strong>contains</strong>: مقدار متن شامل باشد یا نه دقیقا همان متن جستجو شود.<br />
    <strong>select</strong>: پس از جستجو، آنرا انتخاب کند یا خیر<br />
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>].findByText('text',true,true);
    </code></pre>
</figure>
<p>
    <strong>findByValue</strong><br />
    زمانیکه میخواهید یک یا چند ردیف اطلاعاتی را بر اساس مقدار آن ردیف ها پیدا کنید،
    از این تابع استفاده کنید، این تابع تمامی ردیف های اطلاعاتی که دارای چنین مقداری باشد را انتخاب میکند.<br />
    پارامترها:<br />
    <strong>value</strong>: متن مورد جستجو<br />
    <strong>select</strong>: پس از جستجو، آنرا انتخاب کند یا خیر<br />
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>].findByValue('text',true,true);
    </code></pre>
</figure>
<p>
    <strong>findByTextOrValue</strong><br />
    زمانیکه میخواهید یک یا چند ردیف اطلاعاتی را بر اساس محتوی نمایش داده شده یا مقدار آن پیدا کنید،
    از این تابع استفاده کنید، این تابع تمامی ردیف های اطلاعاتی که دارای چنین متنی باشد را انتخاب میکند.<br />
    برای مثال میخواهید هم بر اساس کد کالا و هم بر اساس شرح کالا جستجو داشته باشید.<br />
    پارامترها:<br />
    <strong>text</strong>: متن مورد جستجو<br />
    <strong>contains</strong>: مقدار متن شامل باشد یا نه دقیقا همان متن جستجو شود.<br />
    <strong>select</strong>: پس از جستجو، آنرا انتخاب کند یا خیر<br />
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>].findByTextOrValue('text',true,true);
    </code></pre>
</figure>

<p>
    <strong>filterByText</strong>
    <br />
    زمانیکه میخواهید یک سری گزینه ها را که حاوی متنی مشخص است را فقط نمایش دهید،
    از این تابع استفاده کنید، این تابع تمامی گزینه هایی که دارای چنین متنی باشد را نمایش داده و بقیه را مخفی میکند،
    در صورتیکه ردیفی پیدا شده و آن زیر مجموعه ردیف دیگری باشد، آن ردیف نیز نمایش داده میشود.<br />
    پارامترها:<br />
    <strong>text</strong>: متن مورد جستجو<br />
    <strong>contains</strong>: مقدار متن شامل باشد یا نه دقیقا همان متن جستجو شود.<br />
</p>
<p>برای از بین بردن فیلتر، کافیست با مقدار خالی عمل فیلتر را انجام دهید.</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>].filterByText('text',true);

        WN(<span class="ha">'tree-id'</span>].filterByText('',true);
    </code></pre>
</figure>

<h3>مدیریت dataSource</h3>
<p>
    <strong>addToDataSource</strong><br />
    اگر میخواهید به صورت دستی ردیفی به درختواره اضافه کنید از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>parent</strong>: این ردیف اطلاعاتی زیر مجموعه کدام ردیف است؟ مقدار null یعنی در بدنه اصلی اضافه گردد.<br />
    <strong>text</strong>: محتوی به صورت html یا متن ساده که بایستی نمایش داده شود.<br />
    <strong>link</strong>: اگر ردیف اطلاعاتی از نوع لینک است آدرس را مشخص میکند، مقدار خالی یعنی از نوع لینک نیست.<br />
    <strong>value</strong>: مقدار هر ردیف است.<br />
    <strong>image</strong>: آدرس یا محتوی تصویر هر ردیف است.<br />
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.addToDataSource(null,'text','','','');
        WN(<span class="ha">'tree-id'</span>).wn.addToDataSource(WN(<span class="ha">'tree-id'</span>).wn.selectedItem,'text','','','');
    </code></pre>
</figure>
<p>
    <strong>removeFromDataSource</strong><br />
    اگر میخواهید به صورت دستی ردیفی از درختواره حذف کنید از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>node</strong>: ردیف اطلاعاتی مد نظر<br />
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.removeFromDataSource(WN(<span class="ha">'tree-id'</span>).wn.selectedItem);
    </code></pre>
</figure>
<p>
    <strong>updateNodeElement</strong><br />
    اگر به هر دلیلی به صورت دستی ردیفی از درختواره را تغییر دادید و خواستید متن و تصویر یا لینک آن اعمال شود از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>node</strong>: ردیف اطلاعاتی مد نظر<br />
</p>
<figure>
    <pre><code class="html">
        WN(<span class="ha">'tree-id'</span>).wn.updateNodeElement(WN(<span class="ha">'tree-id'</span>).wn.selectedItem);
    </code></pre>
</figure>
<p>
    <strong>setDataSourceByParentId</strong><br />
    در نرم افزارهایی که دیتا را مستقیم از دیتابیس میخوانند، اغلب برای ذخیره سازی درخت از دو فیلد شناسه و والد استفاده میشود.
    سپس دیتا به صورت یک لیست یکسان استخراج میشود.
    حال که نمایش درختواره با چنین ساختاری هماهنگ نیست، برای ورود آن از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>parentNode</strong>: دیتای مد نظر زیر شاخه کدام ردیف باشد. مقدار null یعنی در ریشه.<br />
    <strong>dataSource</strong>: آرایه ای از دیتای مد نظر<br />
    <strong>idFieldName</strong>: نام فیلد شناسه یا id چیست؟<br />
    <strong>parentFieldName</strong>: نام فیلد والد یا parent چیست؟<br />
    <strong>parentRootValue</strong>: چه مقداری مشخص میکند در فیلد والد که موضوعات در ریشه درج شود. null یا صفر؟ یا هر مقدار دیگری.<br />
    <strong>displayFieldName</strong>: نام فیلدی که حاوی محتوی html برای نمایش است<br />
    <strong>valueFieldName</strong>: نام فیلد مقداری که بعد از انتخاب به هر ردیف نسبت داده میشود.<br />
    <strong>linkFieldName</strong>: نام فیلدی که آدرس لینک در آن است.<br />
    <strong>imageFieldName</strong>: نام فیلدی که آدرس تصویر یا html مرتبط با تصویر در آن است.<br />
    <strong>append</strong>: آیا دیتای جدید به دیتای کنونی اضافه شود یا خیر.<br />
</p>
<p>
    <strong>setDataSourceByItem</strong><br />
    اگر ساختار دیتای شما همانند فایلهای جیسون یا جاوا اسکریپت است، یعنی یک فیلد آرایه ای در آن است که حاوی زیر شاخه ها است، میتوانید
    از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>parentNode</strong>: دیتای مد نظر زیر شاخه کدام ردیف باشد. مقدار null یعنی در ریشه.<br />
    <strong>dataSource</strong>: آرایه ای از دیتای مد نظر<br />
    <strong>itemFieldName</strong>: نام آرایه ای که دیتای زیر شاخه ها در آن است<br />
    <strong>displayFieldName</strong>: نام فیلدی که حاوی محتوی html برای نمایش است<br />
    <strong>valueFieldName</strong>: نام فیلد مقداری که بعد از انتخاب به هر ردیف نسبت داده میشود.<br />
    <strong>linkFieldName</strong>: نام فیلدی که آدرس لینک در آن است.<br />
    <strong>imageFieldName</strong>: نام فیلدی که آدرس تصویر یا html مرتبط با تصویر در آن است.<br />
    <strong>append</strong>: آیا دیتای جدید به دیتای کنونی اضافه شود یا خیر.<br />
</p>
<p>
    <strong>setDataSource</strong><br />
    اگر ساختار دیتای شما بر اساس نوع WNTreeNode است از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>parentNode</strong>: دیتای مد نظر زیر شاخه کدام ردیف باشد. مقدار null یعنی در ریشه.<br />
    <strong>dataSource</strong>: آرایه ای از دیتای مد نظر<br />
    <strong>append</strong>: آیا دیتای جدید به دیتای کنونی اضافه شود یا خیر.<br />
</p>
<p>برای مشاهده مثال ها به موارد زیر توجه کنید.</p>
<div class="example-div" id="example-2">
    <div class="ltr" style="min-height:50vh">
        <button class="primary" onclick="WN('tree-test-2').wn.addToDataSource(null,'text','','','/images/tools16.png')">Add to root</button>
        <button class="primary" onclick="WN('tree-test-2').wn.addToDataSource(WN('tree-test-2').wn.selectedItem,'text','','','/images/tools16.png')">Add to selected item</button>
        <button class="primary" onclick="WN('tree-test-2').wn.removeFromDataSource(WN('tree-test-2').wn.selectedItem)">Remove selected item</button>
        <button class="primary" onclick="WN('tree-test-2').wn.selectedItem.html='Changed Text!'; WN('tree-test-2').wn.updateNodeElement(WN('tree-test-2').wn.selectedItem); ">Change selected text</button><br />
        <button class="primary" onclick="setDataByParentId()">Append Data By Parent and Id</button>
        <button class="primary" onclick="setDataByItem()">Append Data By Children</button><br />
        <button class="primary" onclick="setDataSource()">Append Data to selected Item</button><br />
        <ul id="tree-test-2" wn-type="Tree" class="tree">
        </ul>
    </div>
    <script>
        function setDataByParentId() {
            let ds = [
                {
                    id: 1,
                    parent: null,
                    caption: 'text 1',
                    link: '',
                    icon: ''
                },
                {
                    id: 2,
                    parent: null,
                    caption: 'text 2',
                    link: '',
                    icon: ''
                },
                {
                    id: 3,
                    parent: 1,
                    caption: 'sub text 1 to text 1',
                    link: '',
                    icon: ''
                },
                {
                    id: 4,
                    parent: 1,
                    caption: 'sub text 2 to text 1',
                    link: '',
                    icon: ''
                },
            ];
            WN('tree-test-2').wn.setDataSourceByParentId(WN('tree-test-2').wn.selectedItem, ds, 'id', 'parent', null, 'caption', 'id', 'link', 'icon', false);
        }
        function setDataByItem() {
            let ds = [
                {
                    id: 1,
                    caption: 'text 1',
                    link: '',
                    icon: '',
                    item:[
                        {
                            id: 3,
                            caption: 'sub text 1 to text 1',
                            link: '',
                            icon: ''
                        },
                        {
                            id: 4,
                            caption: 'sub text 2 to text 1',
                            link: '',
                            icon: ''
                        }
                    ]
                },
                {
                    id: 2,
                    caption: 'text 2',
                    link: '',
                    icon: '',
                    item:[]
                }
            ];
            WN('tree-test-2').wn.setDataSourceByItem(WN('tree-test-2').wn.selectedItem, ds, 'item', 'caption', 'id', 'link', 'icon', false);
        }
        function setDataSource() {
            let ds = [
                {
                    html: 'text 1',
                    children: [
                        {
                            html: 'sub text 1 to text 1'
                        },
                        {
                            html: 'sub text 2 to text 1'
                        }
                    ]
                },
                {
                    html: 'text 2'
                }
            ];
            WN('tree-test-2').wn.setDataSource(WN('tree-test-2').wn.selectedItem, ds, false);
        }
        
    </script>
</div>
<figure><code data-on="example-2"></code></figure>

<h3>بارگذاری اطلاعات</h3>
<p>
    همیشه درختواره مقدارش از پیش تعیین شده نیست، در بسیاری از مواقع این اطلاعات توسط سرویس از سرور گرفته شده و بایستی آن مقدار دهی شود.<br />
    بدین منظور بر حسب ساختار دیتا از یکی از تابع <bidi>setDataSource</bidi>، <bidi>setDataSourceByItem</bidi> و یا <bidi>setDataSourceByParentId</bidi> استفاده کنید.
</p>
<p>در زیر یک مثال برای دریافت اطلاعات از سرور است که برای پرشدن خودکار روی هر گزینه که زیر مجموعه ندارد کلیک کنید دیتا از سرور درخواست و به شاخه انتخاب شده اضافه میشود.</p>
<div class="example-div">
    <div class="ltr" id="form6">
        <ul id="tree-test-3" class="tree" wn-type="tree" onselectionchanged="AddTreeItem()">
        </ul>
        <script>
            WN(document).ready(async () => {
                await AddTreeItem();
            });
            async function AddTreeItem() { 
                if ((WN('tree-test-3').wn.selectedItem?.children.length ?? 0)!= 0) return;
                await Post(null, '/Components/Tree').then((r) => {
                    WN('tree-test-3').wn.setDataSource(WN('tree-test-3').wn.selectedItem, r, false);
                }).catch((e) => {
                    console.log(e);
                });
            }
        </script>
    </div>
</div>
<figure><code data-on="form6"></code></figure>

