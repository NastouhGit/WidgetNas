@page
@model WidgetNas.Pages.Components.ListExModel
@{
    ViewData["Title"] = "لیست پویا ListEx";
    ViewData["Description"] = "ویجت نس یک فریم ورک فارسی با پشتیبانی کامل از راست به چپ و همچنین چپ به راست است.";
}
<h1>@ViewData["Title"]</h1>
<p>لیست ها یکی از کاربردی ترین موارد برای نمایش اطلاعات، انتخاب های تک منظوره و منوها می باشد.</p>
<p>لیستها یکی از قدرتمندترین گزینه ها برای نمایش سری موضوعات پشت سر هم هستند. در زیر به انواع آن و نحوه استفاده از آن اشاره میگردد.</p>
<p>لیست پویا با استفاده از توابع جاوا اسکریپت قابلیت انتخاب، اضافه کردن به لیست و حذف را با شما میدهد.</p>
<h2>لیست ساده</h2>
<p>در نمایش ساده شما فقط امکان مشاهده و انتخاب در لیست را خواهید دید.</p>
<div class="example-div">
    <div class="ltr" id="form1">
        <h3>LTR</h3>
        <h4>ul</h4>
        <ul wn-type="list">
            <li>Item 1</li>
            <li>Item 2</li>
            <li>Item 3</li>
            <li>Item 4</li>
            <li>Item 5</li>
        </ul>
        <h4>div</h4>
        <div wn-type="list">
            <div class="list-item">Item 1</div>
            <div class="list-item">Item 2</div>
            <div class="list-item">Item 3</div>
            <div class="list-item">Item 4</div>
            <div class="list-item">Item 5</div>
        </div>
        <h4>Table</h4>
        <table wn-type="list">
            <thead>
                <tr>
                    <td>Col 1</td>
                    <td>Col 2</td>
                    <td>Col 3</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>V 1-1</td>
                    <td>V 1-2</td>
                    <td>V 1-3</td>
                </tr>
                <tr>
                    <td>V 2-1</td>
                    <td class="primary">V 2-2</td>
                    <td>V 2-3</td>
                </tr>
                <tr>
                    <td>V 3-1</td>
                    <td>V 3-2</td>
                    <td>V 3-3</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="rtl">
        <h3>RTL</h3>
        <h4>ul</h4>
        <ul wn-type="list">
            <li>گزینه 1</li>
            <li>گزینه 2</li>
            <li>گزینه 3</li>
            <li>گزینه 4</li>
            <li>گزینه 5</li>
        </ul>
        <h4>div</h4>
        <div wn-type="list">
            <div class="list-item">گزینه 1</div>
            <div class="list-item">گزینه 2</div>
            <div class="list-item">گزینه 3</div>
            <div class="list-item">گزینه 4</div>
            <div class="list-item">گزینه 5</div>
        </div>
        <h4>Table</h4>
        <table wn-type="list">
            <thead>
                <tr>
                    <td>ستون 1</td>
                    <td>ستون 2</td>
                    <td>ستون 3</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>مقدار 1-1</td>
                    <td>مقدار 1-2</td>
                    <td>مقدار 1-3</td>
                </tr>
                <tr>
                    <td>مقدار 2-1</td>
                    <td class="primary">مقدار 2-2</td>
                    <td>مقدار 2-3</td>
                </tr>
                <tr>
                    <td>مقدار 3-1</td>
                    <td>مقدار 3-2</td>
                    <td>مقدار 3-3</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<figure><code data-on="form1"></code></figure>
<h2>کنترل لیست با Javascript</h2>
<p>برای آنکه بتوانید به صورت آنلاین لیست خود را کنترل کنید، مثال زیر را مشاهده کنید.</p>
<p>
    برای شروع باید بدانید، همه اطلاعات در یک دیتا سورس داخلی ذخیره میشود، چه از ابتدا دارای مقدار باشد،
    چه بعدا به آن اضافه شود، این خصوصیت <bidi>dataSource</bidi> نام دارد که آرایه ای از جنس <bidi>WNListNode</bidi> است.
</p>
<p>
    <h5>WNListNode</h5>
    این نوع دارای خصوصیات زیر است.
    <ul class="ltr">
        <li>id: number</li>
        <li>index:number</li>
        <li>text: string</li>
        <li>html: string</li>
        <li>link: string</li>
        <li>value: string</li>
        <li>image: string</li>
        <li>element: HTMLElement</li>
    </ul>
    مقادیر id، index و element به صورت خودکار مقدار دهی میشوند.<br>
    مقدار text هر متنی که در ردیف باشد انتخاب خواهد شد.<br>
    مقدار value به خصوصیت value در آن ردیف مراجعه کرده و هر آنچه که مشخص شده باشد را انتخاب میکند.<br>
    مقدار link اگر در ردیف از لینک استفاده شده باشد، آنرا انتخاب میکند.<br>
    مقدار image اگر در ردیف از img یا i استفاده شده باشد، آنرا انتخاب میکند.<br>
</p>
<p>
    <h5>selectedItem</h5>
    این خصوصیت به گزینه انتخاب شده اشاره دارد، مقدار null یعنی هیچ گزینه ای انتخاب نشده است.<br />
    <bidi>selectedItem: WNListNode</bidi>
</p>
<p>
    <h5>selectedIndex</h5>
    این خصوصیت به شماره ایندکس گزینه انتخاب شده اشاره دارد، مقدار -1 یعنی هیچ گزینه ای انتخاب نشده است.<br />
    <bidi>selectedIndex: number</bidi>
</p>
<p>
    <h5>selectedValue</h5>
    این خصوصیت به مقدار گزینه انتخاب شده اشاره دارد، مقدار null یعنی هیچ گزینه ای انتخاب نشده است.<br />
    <bidi>selectedValue: string</bidi>
</p>
<p>
    <h5>checkedItems</h5>
    در صورتیکه خصوصیت checkbox فعال باشد، هر ردیفی که تیک خورده باشد را به صورت آرایه ای جنس WNListNode برمیگرداند.<br />
    <bidi>checkedItems: WNListNode[]</bidi>
</p>
<p>
    <h5>checkedValues</h5>
    در صورتیکه خصوصیت checkbox فعال باشد، هر ردیفی که تیک خورده باشد مقادیر value آنها را به صورت آرایه ای برمیگرداند.<br />
    <bidi>checkedValues: string[]</bidi>
</p>
<p>
    <h5>checkbox</h5>
    در صورتیکه این خصوصیت فعال شود یعنی مقدار true بگیرد، هر ردیف قابلیت تیک خوردن را به خود میگیرد.<br />
    شما میتوانید این مقدار را با دستور خطی و خصوصیت checkbox تعیین کنید.<br />
    <bidi>checkbox: boolean</bidi>
</p>

<p>
    <h5>checkedClear</h5>
    تمامی گزینه هایی که تیکدار شدند از حالت تیک در می آورد.<br />
    <bidi>checkedClear():void</bidi>
</p>
<p>
    <h5>checkedAll</h5>
    تمامی گزینه هایی که تیکدار نشدند را به حالت تیک دار در می آورد.<br />
    <bidi>checkedAll():void</bidi>
</p>
<p>
    <h5>checkedInvert</h5>
    هر گزینه که تیک دارد را برداشته و هر گزینه که تیک ندارد را تیک دار میکند. یعنی وضعیت تیک ها را بلعکس میکند.<br />
    <bidi>checkedInvert():void</bidi>
</p>
<p>
    <h5>select</h5>
    این تابع با ورودی node مورد نظر، آنرا انتخاب میکند.<br />
    <bidi>select(node: WNListNode): void</bidi>
</p>
<p>
    <h5>findByText</h5>
    اگر میخواهید همه نودهایی که متن خاصی در آنها است را پیدا کنید از تابع استفاده کنید.<br />
    <bidi>findByText(text: string, contains?: boolean, select?: boolean): WNListNode[]</bidi><br />
    مقدار مد نظر را text، عبارت شامل باشد یا نه عینا در متن باشد را با contains و اگر میخواهید اولین گزینه پیدا شده را انتخاب کند از select استفاده کنید.
</p>
<p>
    <h5>findByValue</h5>
    اگر میخواهید دقیقا نودی که مقدار خاصی در آن است را پیدا کنید از تابع استفاده کنید.<br />
    <bidi>findByValue(value: string, select?: boolean): WNListNode</bidi><br />
    مقدار مد نظر را در value،و اگر میخواهید مقدار پیدا شده انتخاب شود از select استفاده کنید.
</p>
<p>
    <h5>findByTextOrValue</h5>
    اگر میخواهید همه نودهایی که متن خاصی در آنها است یا مقدار خاصی دارند را پیدا کنید از تابع استفاده کنید.
    <bidi>findByTextOrValue(text: string, contains?: boolean, select?: boolean): WNListNode[]</bidi><br />
    مقدار مد نظر را text، عبارت شامل باشد یا نه عینا در متن باشد را با contains و اگر میخواهید اولین گزینه پیدا شده را انتخاب کند از select استفاده کنید.
</p>

<p>
    <h5>filterByText</h5>
    برای فیلتر کردن بر اساس عنوان های هر ردیف لیست، از این تابع استفاده میشود.<br />
    <bidi>filterByText(text: string, contains?: boolean): void</bidi><br />
    متن ورودی و پارامتر بعدی مشخص میکند، این متن در بین متون باشد یا نه عینا همین متن فیلتر شود.
</p>
<p>
    <strong>setDataSourceByItem</strong><br />
    در نرم افزارهایی که دیتا را مستقیم از دیتابیس میخوانند، ساختار دیتایی متفاوت از ساختار WNListNode است، لذا توسط این تابع میتوانید مشخصات مد نظر را تعیین کنید و گزینه ها را به لیست اضافه کنید..
    <br />
    پارامترها:<br />
    <strong>dataSource</strong>: آرایه ای از دیتای مد نظر<br />
    <strong>displayFieldName</strong>: نام فیلدی که حاوی محتوی html برای نمایش است<br />
    <strong>valueFieldName</strong>: نام فیلد مقداری که بعد از انتخاب به هر ردیف نسبت داده میشود.<br />
    <strong>linkFieldName</strong>: نام فیلدی که آدرس لینک در آن است.<br />
    <strong>imageFieldName</strong>: نام فیلدی که آدرس تصویر یا html مرتبط با تصویر در آن است.<br />
    <strong>append</strong>: آیا دیتای جدید به دیتای کنونی اضافه شود یا خیر.<br />
</p>
<p>
    <strong>setDataSource</strong><br />
    اگر ساختار دیتای شما بر اساس نوع WNListNode است از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>dataSource</strong>: آرایه ای از دیتای مد نظر<br />
    <strong>append</strong>: آیا دیتای جدید به دیتای کنونی اضافه شود یا خیر.<br />
</p>
<p>
    <strong>addToDataSource</strong><br />
    اگر میخواهید گزینه ای به دیتا سورس خود اضافه کنید از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>text</strong>: متن یا html برای نمایش<br />
    <strong>link</strong>: آدرس لینک برای باز شدن آن صفحه<br />
    <strong>value</strong>: مقدار هر ردیف<br />
    <strong>image</strong>: آدرس تصویر یا تگ i<br />
</p>
<p>
    <strong>removeFromDataSource</strong><br />
    برای حذف یک ردیف از دیتا سورس از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>node</strong>: نود مد نظر را مشخص کنید.<br />
</p>
<p>
    <strong>updateNodeElement</strong><br />
    برای به روز رسانی دیتای یک نود بعد از تغییرات از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>node</strong>: نود مد نظر را مشخص کنید.<br />
</p>
<p>
    <strong>orderDataSourceByText</strong><br />
    اگر میخواهید دیتا سورس بر اساس متن آنها مرتب شود از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>desc</strong>: آیا از بزرگ به کوچک مرتب کند یا خیر<br />
</p>
<p>
    <strong>orderDataSourceByValue</strong><br />
    اگر میخواهید دیتا سورس بر اساس مقدار آنها مرتب شود از این تابع استفاده کنید.
    <br />
    پارامترها:<br />
    <strong>desc</strong>: آیا از بزرگ به کوچک مرتب کند یا خیر<br />
</p>

<p>
    برای درک بیشتر به مثال زیر توجه کنید.
</p>

<div class="example-div" id="exam2">
    <div class="row w-100">
        <div class="col-6">
            <ig class="group">
                <label for="Insert1">Item</label>
                <input id="Insert1" />
                <button onclick="InsertItem()">Insert</button>
            </ig>
            <ig class="button-group">
                <button onclick="DeleteItem()">Delete Selected Item</button>
                <button onclick="WN('list1').wn.orderDataSourceByText()">Order by Text</button>
                <button onclick="WN('list1').wn.orderDataSourceByText(true)">Order Desc</button>
                <button onclick="Import(false)">Import Data</button>
                <button onclick="Import(true)">Append Data</button>
                <button onclick="ChangeText2();">Change Index 2 Text</button>
            </ig>
            <ig class="group">
                <label for="Filter1">Text</label>
                <input id="Filter1" />
                <button onclick="FilterItem()">Filter</button>
            </ig>
            <ig class="group">
                <label for="Find1">Text</label>
                <input id="Find1" />
                <button onclick="FindItem(false)">Find Text</button>
                <button onclick="FindItem(true)">Find Value</button>
            </ig>
            <script>
                function InsertItem() {
                    let value = WN('Insert1').inputElement.value;
                    if (value != '') {
                        WN('list1').wn.addToDataSource(value, '', value, '');
                    }
                }
                function DeleteItem() {
                    WN('list1').wn.removeFromDataSource(WN('list1').wn.selectedItem);
                }
                function FilterItem() {
                    let value = WN('Filter1').inputElement.value;
                    WN('list1').wn.filterByText(value, true);
                }
                function FindItem(findvalue) {
                    let value = document.getElementById('Find1')?.value;
                    if (findvalue)
                        WN('list1').wn.findByValue(value, true);
                    else
                        WN('list1').wn.findByText(value, true, true);
                }
                function Import(append) {
                    let o = [
                        { text: 'item 1', value: 'a1' },
                        { text: 'item 2', value: 'a2' },
                        { text: 'item 3', value: 'a3' },
                        { text: 'item 4', value: 'a4' },
                    ];
                    WN('list1').wn.setDataSourceByItem(o, 'text', 'value', '', '', append);
                }
                function ChangeText2() {
                    let item = WN('list1').wn.dataSource[2];
                    item.html = 'Changed!';
                    WN('list1').wn.updateNodeElement(item);
                }
            </script>
            <div class="row w-100">
                <div class="ltr col">
                    <h3>LTR</h3>
                    <ul id="list1" class="list" wn-type="List">
                        <li value="omid">Omid</li>
                        <li value="ali">Ali</li>
                        <li value="reza">Reza</li>
                    </ul>
                </div>

            </div>

        </div>
    </div>
</div>
<figure><code data-on="exam2"></code></figure>

<h2>تیک دار کردن و انتخاب</h2>
<p>اگر تمایل دارید گزینه ها به صورت جعه تیک باشند، خصوصیت <bidi>checkbox</bidi> را با مقدار true پر نمایید. یا این خصوصیت را از طریق جاوا اسکریپت مقدار دهی کنید.</p>
<p>برای درک بیشتر به مثال زیر توجه کنید.</p>
<div class="example-div" id="exam4">
    <div class="row w-100">
        <div class="ltr col">
            <h3>LTR</h3>
            <ul id="list2" class="list" wn-type="list" checkbox="true" oncheckchanged="alert(WN('list2').wn.checkedValues.join())">
                <li value="m1">Checkbox Manual Item 1</li>
            </ul>
            <button class="primary m-bs-100r" onclick="alert(WN('list2').wn.checkedValues.join())">Get Checked</button>
            <button class="primary m-bs-100r" onclick="WN('list2').wn.checkedValues=['m1','a2']">Set Checked m1,a2</button>
            <button class="primary m-bs-100r" onclick="WN('list2').wn.checkedClear()">Clear Checked</button>
            <button class="primary m-bs-100r" onclick="WN('list2').wn.checkedAll()">Checked All</button>
            <button class="primary m-bs-100r" onclick="WN('list2').wn.checkedInvert()">Invert Checked</button>
            <script>
                WN(document).ready(() => {
                    let o = [
                        { text: 'Chekbox item 1', value: 'a1', image: '/images/tools16.png' },
                        { text: 'Chekbox item 2', value: 'a2', image: '<i class="fa-sharp fa-solid fa-circle-check"></i>' },
                        { text: 'Chekbox item 3', value: 'a3' }
                    ];
                    WN('list2').wn.setDataSourceByItem(o, 'text', 'value', '', 'image', true);
                });
            </script>
        </div>

    </div>
    <div class="row w-100">
        <div class="ltr col">
            <h3>LTR</h3>
            <ul class="list" wn-type="list" checkbox="true" checkbox-class="switch">
                <li value="m1">Checkbox Manual Item 1</li>
                <li value="m2">Checkbox Manual Item 2</li>
                <li value="m3">Checkbox Manual Item 3</li>
                <li value="m4">Checkbox Manual Item 4</li>
            </ul>
        </div>

    </div>
</div>
<figure><code data-on="exam4"></code></figure>

<h2>رخدادها</h2>
<p>
    <h5>beforeClick</h5>
    قبل از کلیک بر روی گزینه لیست، این رخداد فراخوانده میشود. اگر این رخداد مقدار <bidi>false</bidi> برگرداند، ادامه عملیات کلیک متوقف میشود.<br />
    این رخداد را به صورت جاوا اسکریپت به خصوصیت گفته شده نسبت دهید یا در خصوصیت html بنام onbeforeclick تعریف کنید.
</p>
<p>
    <h5>afterClick</h5>
    بعد از عمل کلیک کردن این رخداد فراخوانی میشود.<br />
    این رخداد را به صورت جاوا اسکریپت به خصوصیت گفته شده نسبت دهید یا در خصوصیت html بنام onafterclick تعریف کنید.
</p>
<p>
    <h5>selectionChanged</h5>
    بعد از انتخاب هر ردیف این رخداد فراخوانی میشود.<br />
    این رخداد را به صورت جاوا اسکریپت به خصوصیت گفته شده نسبت دهید یا در خصوصیت html بنام onselectionchanged تعریف کنید.
</p>
<p>
    <h5>checkChanged</h5>
    بعد از تغییر تیک هر ردیف این رخداد فراخوانی میشود.<br />
    این رخداد را به صورت جاوا اسکریپت به خصوصیت گفته شده نسبت دهید یا در خصوصیت html بنام oncheckchanged تعریف کنید.
</p>

<h2>فقط خواندنی و غیر فعال</h2>
<p>در برخی مواقع میخواهیم درخت مان فقط خواندنی باشد و هیچ انتخابی صورت نگیرد.</p>
<div class="example-div" id="exam5">
    <div class="ltr">
        <h3>LTR</h3>
        <ul class="list" wn-type="list" checkbox="true" readonly>
            <li>Checkbox Item 1</li>
            <li>Checkbox Item 2</li>
            <li>Checkbox Item 3</li>
            <li>Checkbox Item 4</li>
            <li>Checkbox Item 5</li>
        </ul>
        <br />
        <ul class="list" wn-type="list" checkbox="true" disabled>
            <li>Checkbox Item 1</li>
            <li>Checkbox Item 2</li>
            <li>Checkbox Item 3</li>
            <li>Checkbox Item 4</li>
            <li>Checkbox Item 5</li>
        </ul>
    </div>
    <div class="rtl">
        <h3>RTL</h3>
        <ul class="list" wn-type="list" checkbox="true" readonly>
            <li>گزینه تیک دار 1</li>
            <li>گزینه تیک دار 2</li>
            <li>گزینه تیک دار 3</li>
            <li>گزینه تیک دار 4</li>
            <li>گزینه تیک دار 5</li>
        </ul>
        <br />
        <ul class="list" wn-type="list" checkbox="true" disabled>
            <li>گزینه تیک دار 1</li>
            <li>گزینه تیک دار 2</li>
            <li>گزینه تیک دار 3</li>
            <li>گزینه تیک دار 4</li>
            <li>گزینه تیک دار 5</li>
        </ul>
    </div>
</div>
<figure><code data-on="exam5"></code></figure>